#!/bin/bash

# Script de d√©marrage en production pour le syst√®me d'analyse d'intelligence

echo "üöÄ D√©marrage du syst√®me d'analyse d'intelligence en mode production..."

# V√©rifier les variables d'environnement
if [ ! -f .env.production ]; then
    echo "‚ùå Erreur: Fichier .env.production introuvable!"
    echo "Veuillez copier .env.production.example et configurer vos variables."
    exit 1
fi

# Charger les variables d'environnement
export $(cat .env.production | grep -v '^#' | xargs)

# V√©rifier la connexion √† la base de donn√©es
echo "üîç V√©rification de la connexion √† la base de donn√©es..."
python3 -c "
import psycopg2
import os
try:
    conn = psycopg2.connect(os.environ['DATABASE_URL'])
    print('‚úÖ Connexion √† la base de donn√©es r√©ussie')
    conn.close()
except Exception as e:
    print(f'‚ùå Erreur de connexion √† la base de donn√©es: {e}')
    exit(1)
"

# Construire le frontend
echo "üî® Construction du frontend..."
npm run build

# D√©marrer le serveur en production
echo "üåê D√©marrage du serveur en mode production..."

# Utiliser gunicorn pour Python et PM2 pour Node.js
if command -v gunicorn &> /dev/null; then
    # D√©marrer Flask avec Gunicorn
    gunicorn -w 4 -b 0.0.0.0:8000 --timeout 120 --access-logfile - --error-logfile - server.simple_flask_app:app &
    FLASK_PID=$!
    echo "‚úÖ Flask d√©marr√© avec Gunicorn (PID: $FLASK_PID)"
else
    echo "‚ö†Ô∏è  Gunicorn non install√©, utilisation du serveur de d√©veloppement Flask"
    python3 server/main_optimized.py &
    FLASK_PID=$!
fi

# D√©marrer le serveur Node.js
NODE_ENV=production node server/index.js &
NODE_PID=$!
echo "‚úÖ Serveur Node.js d√©marr√© (PID: $NODE_PID)"

echo "‚ú® Syst√®me d'analyse d'intelligence d√©marr√© avec succ√®s!"
echo "üìç Frontend: http://localhost:5000"
echo "üìç Backend API: http://localhost:8000"
echo ""
echo "Pour arr√™ter le syst√®me, utilisez: kill $FLASK_PID $NODE_PID"

# Garder le script en cours d'ex√©cution
wait